@page "/EncryptDecrypt"

@using blazor3.providers;
@inject ListData dataService;
@inject IJSRuntime JsRuntime;
<h1>Decrypt</h1>
<div class="form-group">
    <div class="row">
        <div class="col-md-6">
            @if (strkey.Length>0)
            {
                <div class="alert alert-success" role="alert">
                    File got it!!
                </div>
                
            }else
            {

                <div class="alert alert-danger" role="alert">
                    File empty
                </div>
            }
            <div class="custom-file">
                <input type="file" @ref="inputkeyref" class="custom-file-input" id="customFileLang" lang="en" @onchange=changekey/>
                <label class="custom-file-label" for="customFileLang">search Key</label>
            </div>
        </div>
        <div class="col-md-6">
            @if(strkey.Length>0)
            {
                @if (strFile.Length>0)
                {
                    <div class="alert alert-success" role="alert">
                        File got it!!
                    </div>
                    
                }else
                {

                    <div class="alert alert-danger" role="alert">
                        File empty
                    </div>
                }
                <div class="custom-file mt-1">
                    <input type="file" @ref="inputfileref" class="custom-file-input" id="customFileLang" lang="en" @onchange=changefile/>
                    <label class="custom-file-label" for="customFileLang">search File</label>
                </div>
            }
        </div>
    </div>
    
    
    
    @if (strFile.Length>0&&strkey.Length>0)
    {
        <div class="row">
            <div class="col-md-6">
                @if(!swbol)
                {
                    <button class="btn bg-primary" @onclick="DecryptData">Decrypt</button>
                }
                
            </div>
        </div>    
    }
    @if(swbol)
    {
        int i=-1;
        <ul class="list-group mt-3">
            @foreach (var item in dataService.lista)
            {
                i++;
                <li class="list-group-item">@i .-  @item 
                </li>   
                
            }        
        </ul>
    }
    else
    {
        <textarea readonly class="form-control mt-3" @bind="strencrypt" rows="15"> 
          
        </textarea>
    }
    
</div>

@code{
    ElementReference inputkeyref;
    ElementReference inputfileref;
    string strkey="";
    string strFile="";
    bool swbol=false;
    
    string strencrypt="";
    
    
    async Task changekey(){
        //await JsRuntime.InvokeAsync
        //strkey = await Blazor3.Services.serviceInterop.GetFileData(inputkeyref);
        
        Console.WriteLine("inputkeyref : "+inputkeyref);
        Console.WriteLine("Before strkey : "+strkey);
        strkey =  await JsRuntime.InvokeAsync<string>("getFileData",inputkeyref);
        Console.WriteLine("strkey : "+strkey);
        
        byte[] decodedBytes = Convert.FromBase64String(strkey);
        strkey = System.Text.Encoding.UTF8.GetString(decodedBytes);
        
    }
    async Task changefile(){
        //strFile = await blazor3.Services.serviceInterop.GetFileData(inputfileref);
        Console.WriteLine("Before strFile : "+strFile);
        strFile =  await JsRuntime.InvokeAsync<string>("getFileData",inputfileref);
        Console.WriteLine("strFile : "+strFile);
        byte[] decodedBytes = Convert.FromBase64String(strFile);
        strFile = System.Text.Encoding.UTF8.GetString(decodedBytes);
        string[] auxstr= strFile.Split(Environment.NewLine.ToCharArray());
        strencrypt=strFile;
        FillData(auxstr);
    }
    void FillData(string[] auxstr){
        dataService.lista=new List<string>();
        foreach (string item in auxstr)
        {
            dataService.lista.Add(item);
        }
    }
    void DecryptData(){
        //System.Security.Cryptography.Aes
        strFile=dataService.Decrypt(strencrypt,strkey);
        Console.WriteLine("decrypt : " + strFile);
        FillData(strFile.Split(Environment.NewLine));
        swbol=!swbol;
        strencrypt="";
        
    }
}
